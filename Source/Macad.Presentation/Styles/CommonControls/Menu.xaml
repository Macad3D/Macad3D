    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mmp="clr-namespace:Macad.Presentation"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:fluent="urn:fluent-ribbon"
                    mc:Ignorable="d">

    <!--region MenuItem-->

    <!--Menu Item Template-->

    <ControlTemplate x:Key="MenuItemTemplate"
                     TargetType="{x:Type MenuItem}">
        <Grid Background="{mmp:AppResource Macad.Brushes.Popup.Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="border"
                    HorizontalAlignment="Stretch"
                    Margin="0"
                    Width="Auto"
                    Visibility="Collapsed"
                    Background="{mmp:AppResource Macad.Brushes.Button.MouseOver.Background}"
                    BorderBrush="{mmp:AppResource Macad.Brushes.Button.MouseOver.Border}"
                    BorderThickness="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="4">
            </Border>
            <ContentPresenter x:Name="textBlock"
                              ContentSource="Header"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                              Width="Auto"
                              Height="Auto"
                              Margin="5,3,3,3"
                              VerticalAlignment="Center"
                              Grid.Column="1"
                              d:LayoutOverrides="Width"
                              RecognizesAccessKey="False" />
            <Border x:Name="iconImageBorder"
                    BorderThickness="1">
                <ContentPresenter x:Name="iconImage"
                                  Height="16" Width="16"
                                  HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Content="{fluent:ObjectToImageConverter {Binding Icon, RelativeSource={RelativeSource TemplatedParent}}, '16,16', {Binding RelativeSource={RelativeSource TemplatedParent}}}"
                                  Margin="3,2,2,2"
                                  SnapsToDevicePixels="True" />
            </Border>
            <Image x:Name="checkedImage"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Width="14"
                   Height="14"
                   Stretch="Uniform"
                   Visibility="Collapsed"
                   SnapsToDevicePixels="True">
                <Image.Source>
                    <DrawingImage>
                        <DrawingImage.Drawing>
                            <GeometryDrawing Brush="{mmp:AppResource Macad.Brushes.Glyph}"
                                             Geometry="{mmp:AppResource Macad.Geometries.Check}" />
                        </DrawingImage.Drawing>
                    </DrawingImage>
                </Image.Source>
            </Image>
            <mmp:RichTextBlock x:Name="gestureTextBlock"
                               RichText="{TemplateBinding InputGestureText, Converter={mmp:KeyListToRichTextConverter}}"
                               Width="Auto"
                               Height="Auto"
                               Margin="3,3,15,3"
                               VerticalAlignment="Center"
                               Grid.Column="2" />
            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
            </Grid>
            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid x:Name="SubMenu">
                    <Border x:Name="SubMenuBorder" Background="{mmp:AppResource Macad.Brushes.Popup.Background}" BorderThickness="1" />
                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Margin" Value="0,1,0,1" />
                <Setter Property="Padding" Value="6,3,6,3" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Margin" Value="0,1,0,1" />
                <Setter Property="Padding" Value="6,3,6,3" />
                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="Padding" Value="0,2,0,2" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="Padding" Value="0,2,0,2" />
                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
            </Trigger>
            <Trigger Property="InputGestureText"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="gestureTextBlock"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="InputGestureText"
                     Value="">
                <Setter Property="Visibility"
                        TargetName="gestureTextBlock"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Background"
                        TargetName="iconImageBorder"
                        Value="{DynamicResource Macad.Brushes.Button.Checked.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="iconImageBorder"
                        Value="{DynamicResource Macad.Brushes.Button.Checked.Border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon"
                               Value="{x:Null}" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="checkedImage"
                        Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted"
                               Value="True" />
                    <Condition Property="IsEnabled"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="border"
                        Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        TargetName="iconImage"
                        Value="0.5" />
                <Setter Property="Opacity"
                        TargetName="checkedImage"
                        Value="0.5" />
                <Setter Property="Opacity"
                        TargetName="textBlock"
                        Value="0.5" />
                <Setter Property="Opacity"
                        TargetName="ArrowPanel"
                        Value="0.5" />
                <Setter Property="Opacity"
                        TargetName="gestureTextBlock"
                        Value="0.5" />
                <Setter Property="Effect"
                        TargetName="iconImage">
                    <Setter.Value>
                        <fluent:GrayscaleEffect />
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect"
                        TargetName="checkedImage">
                    <Setter.Value>
                        <fluent:GrayscaleEffect />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Template" Value="{StaticResource MenuItemTemplate}" />
    </Style>

    <!--endregion-->

    <!--region GroupHeader-->

    <Style x:Key="Macad.Styles.MenuItem.GroupHeader" TargetType="{x:Type MenuItem}">
        <Setter Property="IsEnabled" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Height="Auto"
                          Background="{mmp:AppResource Macad.Brushes.Popup.Header.Background}">
                        <TextBlock Margin="7,1" 
                                   FontSize="11" 
                                   FontWeight="SemiBold"
                                   Text="{TemplateBinding Header, Converter={mmp:StringUppercaseConverter}}"
                                   TextWrapping="Wrap"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--endregion-->

    <!--region ContextMenu-->

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{mmp:AppResource Macad.Brushes.Popup.Background}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="Transparent">
                        <mmp:DropShadow Margin="6">
                            <Grid>
                                <Border x:Name="Border" BorderBrush="{mmp:AppResource Macad.Brushes.Popup.Border}" BorderThickness="1">
                                    <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Vertical" />
                                </Border>
                            </Grid>
                        </mmp:DropShadow>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--endregion-->

    <!--region ToolbarContextMenu-->

    <Style TargetType="{x:Type mmp:ToolbarContextMenu}">
        <Setter Property="Background" Value="{mmp:AppResource Macad.Brushes.Popup.Background}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Border x:Name="PART_ToolbarBorder"  
                                Background="Transparent" 
                                HorizontalAlignment="Left"
                                Grid.Row="0">
                            <mmp:DropShadow Margin="6">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{mmp:AppResource Macad.Brushes.Popup.Border}" BorderThickness="1">
                                    <ContentPresenter Content="{Binding ToolbarContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                      SnapsToDevicePixels="True" 
                                                      HorizontalAlignment="Left" 
                                                      VerticalAlignment="Center" 
                                                      Margin="4,2" />
                                </Border>
                            </mmp:DropShadow>
                        </Border>
                        <Border x:Name="PART_Menu" 
                                Background="Transparent"
                                Grid.Row="1">
                            <mmp:DropShadow Margin="6">
                                    <Border x:Name="Border" BorderBrush="{mmp:AppResource Macad.Brushes.Popup.Border}" BorderThickness="1">
                                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Vertical" />
                                    </Border>
                            </mmp:DropShadow>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="VerticalAlignment" Value="Bottom">
                            <Setter TargetName="PART_ToolbarBorder" Property="Grid.Row" Value="0" />
                            <Setter TargetName="PART_Menu" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="VerticalAlignment" Value="Top">
                            <Setter TargetName="PART_ToolbarBorder" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_Menu" Property="Grid.Row" Value="0" />
                        </Trigger>
                        <Trigger Property="HorizontalAlignment" Value="Left">
                            <Setter TargetName="PART_Menu" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                        <Trigger Property="HorizontalAlignment" Value="Right">
                            <Setter TargetName="PART_Menu" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--endregion-->


</ResourceDictionary>